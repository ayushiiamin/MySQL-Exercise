1) SELECT count(*) FROM imdb_actors WHERE sex = 'F';
ANS - 32896

2) SELECT title FROM imdb_movies WHERE year=(SELECT min(year) FROM imdb_movies);
ANS - The Lodger (1898)

select title FROM (select mov_id AS movid, max(director_count) from (select movieid as mov_id, count(directorid) 
as director_count from imdb_movies2directors group by movieid order by count(directorid) desc) 
as max_director_count) AS movieTable, imdb_movies AS M
WHERE M.movieid=movieTable.movid;


SELECT title FROM (SELECT movie_id AS id_of_movie, max(director_count) FROM 
(SELECT movieid AS movie_id, count(directorid) AS director_count FROM imdb_movies2directors GROUP BY movieid ORDER BY count(directorid) desc)
AS max_director_count) AS movie_table, imdb_movies AS the_movies WHERE the_movies.movieid=movie_table.id_of_movie;



SELECT sum(time1) FROM imdb_runningtimes JOIN imdb_movies2directors ON imdb_runningtimes.movieid = imdb_movies2directors.movieid WHERE genre = "Sci-Fi";



select count(movid) from (select movieid AS movid from imdb_movies2actors AS movies_actors, imdb_actors AS actors_a where 
movies_actors.actorid=actors_a.actorid and actors_a.name like "%McGregor%Ewan%" and movieid in (select movieid from imdb_movies2actors 
as movies_actors_9, imdb_actors as actors_a_9 where movies_actors_9.actorid=actors_a_9.actorid and actors_a_9.name like "%Carlyle%Robert%") )as number_of_moviid;




SELECT count(movie_id) FROM (SELECT movieid AS movie_id FROM imdb_movies2actors AS movies_actors, imdb_actors AS the_actors WHERE 
movies_actors.actorid=the_actors.actorid AND the_actors.name LIKE "%McGregor%Ewan%" AND movieid IN (SELECT movieid FROM imdb_movies2actors
AS movies_actors_table, imdb_actors AS the_actors_table WHERE movies_actors_table.actorid=the_actors_table.actorid AND 
the_actors_table.name LIKE "%Carlyle%Robert%") ) AS number_of_movies;



SELECT count(distinct actorid) FROM imdb_movies2actors JOIN imdb_movies2directors ON imdb_movies2actors.movieid=imdb_movies2directors.movieid GROUP BY 
actorid HAVING count(distinct genre)>=10;   (1) (q11)





SELECT genre_rank_max FROM (SELECT genre_rank AS genre_rank_max, max(average_rank) FROM (SELECT genre AS genre_rank, avg(rank) AS average_rank FROM 
imdb_movies2directors,imdb_ratings WHERE imdb_movies2directors.movieid=imdb_ratings.movieid AND imdb_ratings.votes>=1000 GROUP BY genre ORDER BY avg(rank) desc) AS max_avg_rank,
imdb_movies2directors) AS max_genre_avg_rank;



select case
when year>= 1960 and year <= 1969 then "1960-1969"
when year >= 1970 and year <= 1979 then "1970-1979"
when year >= 1980 and year <= 1989 then "1980-1989"
when year >= 1990 and year <= 1999 then "1990-1999"
when year >= 2000 and year <= 2010 then "2000-2010"
else NULL
end as decade_movie,
count(*)
from imdb_movies
group by decade_movie
having decade_movie is not NULL;




SELECT case
WHEN year>= 1960 AND year <= 1969 THEN "1960-1969"
WHEN year >= 1970 AND year <= 1979 THEN "1970-1979"
WHEN year >= 1980 AND year <= 1989 THEN "1980-1989"
WHEN year >= 1990 AND year <= 1999 THEN "1990-1999"
WHEN year >= 2000 AND year <= 2010 THEN "2000-2010"
ELSE NULL
end AS decade_movie,
count(*) FROM imdb_movies
GROUP BY decade_movie
HAVING decade_movie IS not NULL;




SELECT count(movieid) FROM imdb_movies2directors WHERE genre IS null;


select count(*) from (select count(case when sex = 'M' then 1 end) as male_count, count(case when sex = 'F' then 1 end) as female_count, 
count(imdb_movies2actors.movieid) as movie_count from imdb_actors,imdb_movies2actors where imdb_actors.actorid=imdb_movies2actors.actorid group 
by movieid having female_count>male_count) as count_gr8_female_male;




SELECT count(distinct actor1) FROM
(SELECT A.actorid AS actor1, B.actorid AS actor2, A.movieid AS a_movieid, B.movieid AS b_movieid FROM imdb_movies2actors A, 
imdb_movies2actors B WHERE A.actorid<>B.actorid AND A.movieid=B.movieid GROUP BY A.actorid, B.actorid HAVING count(*)>=10) 
AS count_movies;



select genre_rank_max from (select genre_rank as genre_rank_max, max(average_rank) from (select genre as genre_rank, avg(rank) as average_rank 
from imdb_movies2directors,imdb_ratings where imdb_movies2directors.movieid=imdb_ratings.movieid group by genre order by avg(rank) desc) as max_avg_rank,
imdb_movies2directors) as max_genre_avg_rank;



select (floor(movies.year/10)*10) as floor_year, count(movies.movieid) as movie_count, avg(rank) as avg_rank from imdb_movies movies, imdb_ratings ratings where 
movies.movieid = ratings.movieid group by floor(year/10) order by avg_rank desc;





select
    count(case when sex = 'M' then 1 end) as male_count,
    count(case when sex = 'F' then 1 end) as female_count,
    count(imdb_movies2actors.movieid) as movie_count
    from imdb_actors,imdb_movies2actors
    where imdb_actors.actorid=imdb_movies2actors.actorid
    group by movieid
    having female_count>male_count;





SELECT count(*) FROM (SELECT count(case WHEN sex = 'M' THEN 1 end) AS male_count,
count(case WHEN sex = 'F' THEN 1 end) AS female_count,
count(imdb_movies2actors.movieid) AS movie_count
FROM imdb_actors,imdb_movies2actors WHERE imdb_actors.actorid=imdb_movies2actors.actorid
GROUP BY movieid HAVING female_count>male_count) AS count_female_male;





select high_year as highest_year from ( select floor_year as high_year, max(avg_rank) as max_avg_rank from (select (floor(year/10)*10) as floor_year, 
count(movies.movieid) as movie_count, avg(rank) as avg_rank from imdb_movies as movies, imdb_ratings as ratings where movies.movieid = ratings.movieid group by 
floor(year/10) order by avg_rank desc) as max_table) as max_table_year;





SELECT high_year AS highest_year FROM (SELECT floor_year AS high_year, max(avg_rank) AS max_avg_rank FROM (SELECT (floor(year/10)*10) AS floor_year, 
count(imdb_movies.movieid) AS movie_count, avg(rank) AS avg_rank FROM imdb_movies, imdb_ratings WHERE imdb_movies.movieid = imdb_ratings.movieid GROUP BY 
floor(year/10) ORDER BY avg_rank desc) AS max_table) AS max_table_year;






select count(imdb_





SELECT COUNT(*) FROM  (SELECT COUNT( MA.movieid),A.name as actor, D.name as director, W.name as writer FROM imdb_movies2actors AS MA, imdb_movies2directors AS MD, imdb_movies2writers AS MW ,
imdb_actors AS A, imdb_directors AS D, imdb_writers AS W WHERE 
MA.movieid = MD.movieid AND MD.movieid = MW.movieid AND MW.movieid=MA.movieid AND 
 MD.directorid=D.directorid AND MW.writerid=W.writerid AND MA.actorid=A.actorid
 GROUP BY MA.movieid
 HAVING (actor LIKE director) AND (director LIKE writer)) AS table1 ;










SELECT count(*) FROM (SELECT count(movies_actors.movieid) AS count_movies_actors, actors.name AS actors, directors.name AS directors, writers.name AS writers
FROM imdb_movies2actors AS movies_actors, imdb_movies2directors AS movies_directors, imdb_movies2writers AS movies_writers,
imdb_actors AS actors, imdb_writers AS writers,imdb_directors AS directors
WHERE movies_actors.movieid = movies_directors.movieid AND movies_directors.movieid = movies_writers.movieid AND
movies_writers.movieid = movies_actors.movieid AND movies_actors.actorid = actors.actorid AND
movies_directors.directorid = directors.directorid AND movies_writers.writerid = writers.writerid
GROUP BY(movies_actors.movieid) HAVING (actors like directors) AND (directors like writers)) AS count_movies;






select count(*) from (select count(movies_directors.movieid) as count_movies_actors, actors.name as actors, directors.name as directors, writers.name as writers
       from imdb_movies2actors as movies_actors,
    imdb_movies2directors as movies_directors,
   imdb_movies2writers as movies_writers,
         imdb_actors as actors,
         imdb_writers as writers,
         imdb_directors as directors
         where movies_actors.movieid = movies_directors.movieid and
         movies_directors.movieid = movies_writers.movieid and
         movies_writers.movieid = movies_actors.movieid and
         movies_actors.actorid = actors.actorid and
         movies_directors.directorid = directors.directorid and
         movies_writers.writerid = writers.writerid
         group by(movies_actors.movieid) having
         (actors not like directors) and (directors like writers) and (actors not like writers)) as count_movies;









select count(*) from (select count(movies_actors.movieid) as count_movies_actors, actors.name as actors, directors.name as directors, writers.name as writers
   from imdb_movies2actors as movies_actors,
   imdb_movies2directors as movies_directors,
    imdb_movies2writers as movies_writers,
    imdb_actors as actors,
    imdb_writers as writers,
    imdb_directors as directors
    where movies_actors.movieid = movies_directors.movieid and
    movies_directors.movieid = movies_writers.movieid and
    movies_writers.movieid = movies_actors.movieid and
    movies_actors.actorid = actors.actorid and
    movies_directors.directorid = directors.directorid and
    movies_writers.writerid = writers.writerid
    group by(movies_actors.movieid) having
    (actors not like directors) and (directors like writers) and (actors not like writers)) as count_movies;